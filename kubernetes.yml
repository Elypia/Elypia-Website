# The configuration assumes the Kubernetes cluster has Helm installed
# with the following charts (packages):
# * nginx-ingress - Load balancer to internal web application instances.
# * cert-manager - Automatically provision Let's Encrypt certificates.

---
# Deploy the Elypia Website
apiVersion: apps/v1
kind: Deployment
metadata:
  name: elypia-website
spec:
  replicas: 1
  selector:
    matchLabels:
      app: elypia-website
  template:
    metadata:
      labels:
        app: elypia-website
    spec:
      containers:
        - name: elypia-website
          image: us.gcr.io/elypia/elypia-website:{{CI_COMMIT_TAG}}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
            - name: https
              containerPort: 443
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /index.html
              port: 80
            initialDelaySeconds: 15
            timeoutSeconds: 5
            periodSeconds: 15
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /index.html
              port: 80
            initialDelaySeconds: 15
            timeoutSeconds: 5
            periodSeconds: 15
            failureThreshold: 3
---
apiVersion: certmanager.k8s.io/v1alpha1
kind: ClusterIssuer
metadata:
  labels:
    name: letsencrypt-prod
  name: letsencrypt-prod
spec:
  acme:
    email: seth@elypia.org
    http01: {}
    privateKeySecretRef:
      name: letsencrypt-prod
    server: https://acme-v02.api.letsencrypt.org/directory
---
