# The configuration assumes the Kubernetes cluster has Helm installed
# with the following charts (packages):
# * nginx-ingress - Load balancer to internal web application instances.
# * cert-manager - Automatically provision Let's Encrypt certificates.

---
# Deploy the Elypia Website
apiVersion: apps/v1
kind: Deployment
metadata:
  name: elypia-website
spec:
  replicas: 1
  selector:
    matchLabels:
      app: elypia-website
  template:
    metadata:
      labels:
        app: elypia-website
    spec:
      containers:
        - name: elypia-website
          image: us.gcr.io/elypia/elypia-website:{{CI_COMMIT_TAG}}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
            - name: https
              containerPort: 443
              protocol: TCP
          readinessProbe:
            initialDelaySeconds: 15
            timeoutSeconds: 5
            periodSeconds: 15
            failureThreshold: 3
            httpGet:
              path: /index.html
              port: 80
          livenessProbe:
            initialDelaySeconds: 15
            timeoutSeconds: 5
            periodSeconds: 15
            failureThreshold: 3
            httpGet:
              path: /index.html
              port: 80
          resources:
            requests:
              memory: 256Mi
              cpu: 1m
            limits:
              memory: 512Mi
              cpu: 200m
---
# Expose the Elypia Website
apiVersion: v1
kind: Service
metadata:
  name: elypia-website-service
spec:
  ports:
    - port: 80
  selector:
    app: elypia-website
---
# Automatically provision Let's Encrypt certificates.
apiVersion: certmanager.k8s.io/v1alpha1
kind: ClusterIssuer
metadata:
  name: letsencrypt-prod
  labels:
    name: letsencrypt-prod
spec:
  acme:
    email: seth@elypia.org
    server: https://acme-v02.api.letsencrypt.org/directory
    http01: {}
    privateKeySecretRef:
      name: letsencrypt-prod
---
# Exposed public endpoint for users to connect.
# On GKE this will allocate an IP which should be added
# to the DNS records associated with the domain defined.
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: elypia-website-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    certmanager.k8s.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/server-alias: "www.elypia.org"
spec:
  tls:
    - secretName: letsencrypt-prod
      hosts:
        - elypia.org
        - www.elypia.org
  rules:
    - host: elypia.org
      http:
        paths:
          - path: /
            backend:
              serviceName: elypia-website-service
              servicePort: 80
---
